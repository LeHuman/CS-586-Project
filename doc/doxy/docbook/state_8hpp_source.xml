<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_state_8hpp_source" xml:lang="en-US">
<title>state.hpp</title>
<indexterm><primary>//wsl$/Debian/home/bytewise/github/CS586_Project/Part 2/include/state/state.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&quot;OP.hpp&quot;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&quot;VM.hpp&quot;</emphasis>
5 
6 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_m_d_a">MDA</link>;
7 
11 <emphasis role="keyword">typedef</emphasis>&#32;enum&#32;:&#32;<emphasis role="keywordtype">int</emphasis>&#32;{
12 &#32;&#32;&#32;&#32;CREATE,
13 &#32;&#32;&#32;&#32;NO_CUPS,
14 &#32;&#32;&#32;&#32;IDLE,
15 &#32;&#32;&#32;&#32;COINS_INSERTED,
16 &#32;&#32;&#32;&#32;INVALID,
17 }&#32;state_e;
18 
22 <emphasis role="keyword">static</emphasis>&#32;std::string&#32;state_e_str[]&#32;=&#32;{
23 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;CREATE&quot;</emphasis>,
24 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;NO_CUPS&quot;</emphasis>,
25 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;IDLE&quot;</emphasis>,
26 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;COINS_INSERTED&quot;</emphasis>,
27 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;INVALID&quot;</emphasis>,
28 };
29 
33 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_context__t">Context_t</link>&#32;{
34 <emphasis role="keyword">private</emphasis>:
38 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_context__t_1aa0ac16675ae08b78b99b62ee71fe1f83">cups</link>&#32;=&#32;0;
42 &#32;&#32;&#32;&#32;std::set&lt;int&gt;&#32;<link linkend="_class_context__t_1a8d65ad907d411e01a22c6508c2476a73">a</link>;
43 
44 <emphasis role="keyword">public</emphasis>:
45 &#32;&#32;&#32;&#32;<link linkend="_class_context__t">Context_t</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
46 
47 &#32;&#32;&#32;&#32;<link linkend="_class_context__t">~Context_t</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
48 
49 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;set_cups(<emphasis role="keywordtype">int</emphasis>&#32;n)&#32;{
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_context__t_1aa0ac16675ae08b78b99b62ee71fe1f83">cups</link>&#32;=&#32;n;
51 &#32;&#32;&#32;&#32;}
52 
53 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;get_cups()&#32;{
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_context__t_1aa0ac16675ae08b78b99b62ee71fe1f83">cups</link>;
55 &#32;&#32;&#32;&#32;}
56 
57 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;clear_additives()&#32;{
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_context__t_1a8d65ad907d411e01a22c6508c2476a73">a</link>.clear();
59 &#32;&#32;&#32;&#32;}
60 
61 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;toggle_additive(additive_e&#32;add)&#32;{
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_context__t_1a8d65ad907d411e01a22c6508c2476a73">a</link>.find(add)&#32;==&#32;<link linkend="_class_context__t_1a8d65ad907d411e01a22c6508c2476a73">a</link>.end())
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_context__t_1a8d65ad907d411e01a22c6508c2476a73">a</link>.insert(add);
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_context__t_1a8d65ad907d411e01a22c6508c2476a73">a</link>.erase(add);
66 &#32;&#32;&#32;&#32;}
67 
68 &#32;&#32;&#32;&#32;std::set&lt;int&gt;&#32;get_additives()&#32;{
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_context__t_1a8d65ad907d411e01a22c6508c2476a73">a</link>;
70 &#32;&#32;&#32;&#32;}
71 };
72 
73 <emphasis role="keyword">class&#32;</emphasis>State_t&#32;{
74 <emphasis role="keyword">protected</emphasis>:
78 &#32;&#32;&#32;&#32;<link linkend="_class_context__t">Context_t</link>&#32;*ctx;
82 &#32;&#32;&#32;&#32;<link linkend="_class_m_d_a">MDA</link>&#32;*mda;
86 &#32;&#32;&#32;&#32;<link linkend="_class_o_p">OP</link>&#32;*op;
87 
88 <emphasis role="keyword">public</emphasis>:
89 &#32;&#32;&#32;&#32;State_t(<link linkend="_class_m_d_a">MDA</link>&#32;*mda,&#32;<link linkend="_class_o_p">OP</link>&#32;*o,&#32;<link linkend="_class_context__t">Context_t</link>&#32;*ctx)&#32;:&#32;ctx(ctx),&#32;mda(mda),&#32;op(o){};
90 
91 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;~State_t()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
92 
96 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;create(){};
97 
101 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;insert_cups(<emphasis role="keywordtype">int</emphasis>&#32;n){};
102 
106 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;coin(<emphasis role="keywordtype">int</emphasis>&#32;n){};
107 
111 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;card(){};
112 
116 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;cancel(){};
117 
121 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;set_price(){};
122 
126 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;dispose_drink(<emphasis role="keywordtype">int</emphasis>&#32;d){};
127 
131 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;additive(<emphasis role="keywordtype">int</emphasis>&#32;d){};
132 };
</programlisting></section>
