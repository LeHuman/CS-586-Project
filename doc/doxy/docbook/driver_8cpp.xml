<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_driver_8cpp" xml:lang="en-US">
<title>//wsl$/Debian/home/bytewise/github/CS586_Project/Part 2/src/driver.cpp File Reference</title>
<indexterm><primary>//wsl$/Debian/home/bytewise/github/CS586_Project/Part 2/src/driver.cpp</primary></indexterm>
<para>

<para>This file serves as the driver for both VMs. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &lt;fstream&gt;<?linebreak?>#include &lt;iostream&gt;<?linebreak?>#include &lt;limits&gt;<?linebreak?>#include &lt;stdio.h&gt;<?linebreak?>#include &lt;stdlib.h&gt;<?linebreak?>#include &lt;string&gt;<?linebreak?>#include &quot;../include/VM1.hpp&quot;<?linebreak?>#include &quot;../include/VM2.hpp&quot;<?linebreak?></programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T &gt; </para><para>T <link linkend="_driver_8cpp_1a8a656f61c809567aeaab29c99848525e">get_user_input</link> (std::string name=&quot;&quot;, std::string type=&quot;&quot;, std::string id=&quot;&quot;)</para>

<para>Get a given datatype from the user, with formatted output. </para>
</listitem>
            <listitem><para><anchor xml:id="_driver_8cpp_1a238633eeda50e808fbbdc7989a56a2ea"/>void <emphasis role="strong">drive_vm1</emphasis> ()</para>

<para>Drives the <link linkend="_class_v_m1">VM1</link> demo. </para>
</listitem>
            <listitem><para>void <link linkend="_driver_8cpp_1ae03ecf494bce90825544c84c2e3f1f66">drive_vm2</link> ()</para>

<para>Drives the <link linkend="_class_v_m2">VM2</link> demo. </para>
</listitem>
            <listitem><para>int <link linkend="_driver_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>

<para>The main function. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This file serves as the driver for both VMs. </para>

<para><formalpara><title>Author</title>

<para>IR </para>
</formalpara>
<formalpara><title>Version</title>

<para>0.1 </para>
</formalpara>
<formalpara><title>Date</title>

<para>2023-04-28</para>
</formalpara>
<formalpara><title>Copyright</title>

<para>Copyright (c) 2023 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_driver_8cpp_1a8a656f61c809567aeaab29c99848525e"/><section>
    <title>get_user_input()</title>
<indexterm><primary>get_user_input</primary><secondary>driver.cpp</secondary></indexterm>
<indexterm><primary>driver.cpp</primary><secondary>get_user_input</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>T get_user_input (std::string name = <computeroutput>&quot;&quot;</computeroutput>
, std::string type = <computeroutput>&quot;&quot;</computeroutput>
, std::string id = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Get a given datatype from the user, with formatted output. </para>
</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>the typename to use </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>name</entry><entry>
<para>Name of request, if any </para>
</entry>
                            </row>
                            <row>
<entry>type</entry><entry>
<para>name of data type, if any </para>
</entry>
                            </row>
                            <row>
<entry>id</entry><entry>
<para>variable name of request, if any </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>T the value caught from user </para>
</formalpara>
</para>
</section>
<anchor xml:id="_driver_8cpp_1ae03ecf494bce90825544c84c2e3f1f66"/><section>
    <title>drive_vm2()</title>
<indexterm><primary>drive_vm2</primary><secondary>driver.cpp</secondary></indexterm>
<indexterm><primary>driver.cpp</primary><secondary>drive_vm2</secondary></indexterm>
<para><computeroutput>void drive_vm2 ( )</computeroutput></para><para>

<para>Drives the <link linkend="_class_v_m2">VM2</link> demo. </para>
</para>
</section>
<anchor xml:id="_driver_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/><section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>driver.cpp</secondary></indexterm>
<indexterm><primary>driver.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para><para>

<para>The main function. </para>
</para>

<para><formalpara><title>Returns</title>

<para>int returns 0 </para>
</formalpara>
</para>
</section>
</section>
</section>
